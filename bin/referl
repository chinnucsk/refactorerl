#!/bin/sh

# Unix shell script that starts RefactorErl. The same command line can be used
# on all platforms to start the server.

help_exit(){
        cat <<HELP >&2
Usage: $0 [Option]...
Starts RefactorErl, using the current working directory as the data directory.

Recognised options:
  -erl PATH        Path to the Erlang executable to use
  -base PATH       Path to the RefactorErl base directory
  -name NAME       Erlang node name
  -server          Start in server mode (no shell is started)
  -client          Start in client mode (no server is started)
  -build TARGET    Build TARGET (e.g. tool, doc, clean)
  -emacs           Start as an Emacs client
  -help            Print this help text
HELP
        exit
#  -wrangler PATH   Path to a Wrangler installation
}

# Set defaults
ERL=erl
BASE=`pwd`
SERVER=yes
CLIENT=no
NAME=refactorerl@localhost

# Interpret arguments
while [ $# -gt 0 ]
do
    if [ "$1" = -erl ]
    then
        ERL="$2"
        shift 2
    elif [ "$1" = -base ]
    then
        BASE="$2"
        shift 2
    elif [ "$1" = -name ]
    then
        NAME="$2"
        shift 2
    elif [ "$1" = -server ]
    then
        SERVER=yes
        CLIENT=server
        shift
    elif [ "$1" = -emacs ]
    then
        CLIENT=emacs
        shift
    elif [ "$1" = -build ]
    then
        CLIENT=build
        SERVER=no
        NAME=build
        TARGET="$2"
        shift 2
    elif [ "$1" = -client ]
    then
        SERVER=no
        shift
    elif [ "$1" = -wrangler ]
    then
        WRANGLER="$2"
        shift 2
    elif [ "$1" = -help ]
    then
        help_exit
    else
        echo "error: unknown argument: '$1'!" >&2
        echo >&2
        help_exit
    fi
done

# Set extra arguments
[ $CLIENT = server ] && ARGS="-noinput"
[ $CLIENT = emacs ]  && ARGS="-noshell -run referl_emacs"
[ $CLIENT = build ]  && ARGS="-noshell -run referl_gen_build start $TARGET"


# The following feature appeared in R12B-2:
export ERL_LIBS="$BASE/lib"

# Other possibility, which only works in Unix:
# -pa "$BASE/lib"/*/ebin

if [ $SERVER = yes ]
then
    "$ERL" \
        -sname  "$NAME" \
        -config "$BASE/sys.config" \
        -boot   "$BASE/refactorerl" \
        ${WRANGLER:+-pa} ${WRANGLER:+"$WRANGLER"} \
        +W "w" \
        $ARGS
else

    [ $CLIENT = build ]  && "$ERL" -make

    "$ERL" \
        -sname  "$NAME" \
        $ARGS
fi
